// Generated by BUCKLESCRIPT, PLEASE EDIT WITH CARE
'use strict';

var List = require("bs-platform/lib/js/list.js");
var $$Array = require("bs-platform/lib/js/array.js");
var Curry = require("bs-platform/lib/js/curry.js");
var React = require("react");
var Json_decode = require("@glennsl/bs-json/src/Json_decode.bs.js");

function decodeRequest(json) {
  return /* record */[
          /* query */Json_decode.field("query", Json_decode.string, json),
          /* results */Json_decode.field("results", Json_decode.$$int, json)
        ];
}

function decodeResult(json) {
  return /* record */[
          /* country */Json_decode.field("country", Json_decode.string, json),
          /* lat */Json_decode.field("lat", Json_decode.string, json),
          /* lon */Json_decode.field("lon", Json_decode.string, json),
          /* name */Json_decode.field("name", Json_decode.string, json),
          /* region */Json_decode.field("region", Json_decode.string, json),
          /* timezone_id */Json_decode.field("timezone_id", Json_decode.string, json),
          /* utc_offset */Json_decode.field("utc_offset", Json_decode.string, json)
        ];
}

function decodeSuggestions(json) {
  return /* record */[
          /* request */Json_decode.field("request", decodeRequest, json),
          /* results */Json_decode.field("results", (function (param) {
                  return Json_decode.list(decodeResult, param);
                }), json)
        ];
}

var initialLocation = "";

var initialQuery = "";

function Widget(Props) {
  React.useState((function () {
          return initialLocation;
        }));
  var match = React.useState((function () {
          return initialQuery;
        }));
  var setQuery = match[1];
  var query = match[0];
  var match$1 = React.useState((function () {
          return /* [] */0;
        }));
  var setSuggestions = match$1[1];
  var suggestions = match$1[0];
  var onClick = function (param) {
    console.log(suggestions);
    return /* () */0;
  };
  var fetchCities = function (param) {
    var url = "https://api.weatherstack.com/autocomplete?access_key=502fb10fb0b5873879854cccfa6df200&query=" + query;
    fetch(url).then((function (prim) {
              return prim.json();
            })).then((function (json) {
            console.log(json);
            var data = decodeSuggestions(json);
            return Promise.resolve(Curry._1(setSuggestions, (function (param) {
                              return data[/* results */1];
                            })));
          }));
    return /* () */0;
  };
  React.useEffect((function () {
          if (query.length > 2) {
            console.log("fetching cities");
            fetchCities(/* () */0);
          } else {
            Curry._1(setSuggestions, (function (param) {
                    return /* [] */0;
                  }));
          }
          return ;
        }), /* array */[query]);
  return React.createElement("div", undefined, React.createElement("input", {
                  type: "text",
                  onChange: (function ($$event) {
                      return Curry._1(setQuery, $$event.target.value);
                    })
                }), React.createElement("button", {
                  onClick: onClick
                }, "GO"), React.createElement("span", undefined, query), React.createElement("ul", undefined, $$Array.of_list(List.map((function (item) {
                            return React.createElement("li", undefined, item[/* name */3]);
                          }), suggestions))));
}

var initialSuggestions = /* [] */0;

var make = Widget;

exports.decodeRequest = decodeRequest;
exports.decodeResult = decodeResult;
exports.decodeSuggestions = decodeSuggestions;
exports.initialLocation = initialLocation;
exports.initialQuery = initialQuery;
exports.initialSuggestions = initialSuggestions;
exports.make = make;
/* react Not a pure module */
